{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","hooks/useTransactions.js","components/AddTransaction.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["state","action","type","transactions","filter","transaction","id","payload","GlobalContext","createContext","GlobalProvider","children","useState","setTransactions","fetchData","a","axios","get","transactionsdata","length","data","console","log","useEffect","useTransactions","useReducer","reducer","dispatch","deleteTransaction","delete","alert","addTransaction","post","Provider","value","AddTransaction","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","className","htmlFor","onChange","target","placeholder","Balance","total","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","Transaction","sign","Math","abs","onClick","_id","TransactionList","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAAe,WAACA,EAAOC,GACrB,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEG,aAAcH,EAAMG,aAAaC,QAC/B,SAACC,GAAD,OAAiBA,EAAYC,KAAOL,EAAOM,aAGjD,IAAK,kBACH,OAAO,2BACFP,GADL,IAEEG,aAAa,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,iBAG5C,QACE,OAAOH,I,gBCXAQ,EAAgBC,0BAEhBC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvBR,ECNqB,WAAO,IAAD,EACKS,mBAAS,IADd,mBAC5BT,EAD4B,KACdU,EADc,KAE7BC,EAAS,uCAAG,gCAAAC,EAAA,+EAEiBC,IAAMC,IAAN,2DAFjB,OAERC,EAFQ,OAKVf,EAAagB,UAAb,OAAwBD,QAAxB,IAAwBA,GAAxB,UAAwBA,EAAkBE,YAA1C,aAAwB,EAAwBjB,eAClDU,EAAe,OAACK,QAAD,IAACA,GAAD,UAACA,EAAkBE,YAAnB,aAAC,EAAwBjB,cAN5B,gDASdkB,QAAQC,IAAR,MATc,yDAAH,qDAef,OAHAC,qBAAU,WACRT,MACC,CAACX,IACG,CACLA,gBDZuBqB,GAAjBrB,aADsC,EAEpBsB,qBAAWC,EAAS,CAC5CvB,iBAH4C,mBAEhCwB,GAFgC,WAMxCC,EAAiB,uCAAG,WAAOtB,GAAP,SAAAS,EAAA,+EAEhBC,IAAMa,OAAN,iEACsDvB,IAHtC,OAKtBqB,EAAS,CACPzB,KAAM,qBACNK,QAASD,IAPW,+CAUtBwB,MAAM,EAAD,IAViB,wDAAH,sDAcjBC,EAAc,uCAAG,WAAO1B,GAAP,SAAAU,EAAA,+EAEbC,IAAMgB,KAAN,0DAEJ3B,GAJiB,OAMnBsB,EAAS,CACPzB,KAAM,kBACNK,QAASF,IARQ,+CAWnByB,MAAM,EAAD,IAXc,wDAAH,sDAepB,OACE,cAACtB,EAAcyB,SAAf,CACEC,MAAO,CACL/B,aAAcA,EACdyB,oBACAG,kBAJJ,SAOGpB,KECQwB,MAhDf,WAA2B,IAAD,EACAvB,mBAAS,IADT,mBACjBwB,EADiB,KACXC,EADW,OAEIzB,mBAAS,GAFb,mBAEjB0B,EAFiB,KAETC,EAFS,KAGhBR,EAAmBS,qBAAWhC,GAA9BuB,eAcR,OACE,gCACE,qDACA,uBAAMU,SAfO,SAACC,GAChBA,EAAEC,iBAOFZ,EALuB,CACrBK,OACAE,QAASA,IAIXC,EAAU,IACVF,EAAQ,KAKN,UACE,sBAAKO,UAAU,eAAf,UACE,uBAAOC,QAAQ,OAAf,kBACA,uBACE3C,KAAK,OACLgC,MAAOE,EACPU,SAAU,SAACJ,GAAD,OAAOL,EAAQK,EAAEK,OAAOb,QAClCc,YAAY,qBAGhB,sBAAKJ,UAAU,eAAf,UACE,wBAAOC,QAAQ,SAAf,oBACS,uBADT,6CAIA,uBACE3C,KAAK,SACLgC,MAAOI,EACPQ,SAAU,SAACJ,GAAD,OAAOH,EAAUG,EAAEK,OAAOb,QACpCc,YAAY,uBAGhB,wBAAQJ,UAAU,MAAlB,oCC3BOK,MAff,WAAoB,IAKZC,EAJmBV,qBAAWhC,GAA5BL,aAEqBgD,KAAI,SAAC9C,GAAD,OAAiBA,EAAYiC,UAExCc,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAEtE,OACE,gCACE,8CACA,mCAAML,SCoBGM,MA9Bf,WAA2B,IAGnBC,EAFmBjB,qBAAWhC,GAA5BL,aAEqBgD,KAAI,SAAC9C,GAAD,OAAiBA,EAAYiC,UAExDoB,EAASD,EACZrD,QAAO,SAACkD,GAAD,OAAUA,EAAO,KACxBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GACrCC,QAAQ,GAELI,IAEH,EADDF,EAAQrD,QAAO,SAACkD,GAAD,OAAUA,EAAO,KAAGF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,IAExEC,QAAQ,GACV,OACE,8BACE,sBAAKX,UAAU,oBAAf,UACE,gCACE,wCACA,mBAAGA,UAAU,aAAb,SAA2Bc,OAE7B,gCACE,yCACA,mBAAGd,UAAU,cAAb,SAA4Be,aCvBzBC,EAAc,SAAC,GAAqB,IAAnBvD,EAAkB,EAAlBA,YACpBuB,EAAsBY,qBAAWhC,GAAjCoB,kBAEFiC,EAAOxD,EAAYiC,OAAS,EAAI,IAAM,IAE5C,OACE,qBAAIM,UAAWvC,EAAYiC,OAAS,EAAI,QAAU,OAAlD,UACGjC,EAAY+B,KAAM,IACnB,iCACGyB,EADH,IACUC,KAAKC,IAAI1D,EAAYiC,WAE/B,wBACE0B,QAAS,kBAAMpC,EAAkBvB,EAAY4D,MAC7CrB,UAAU,aAFZ,mBCMSsB,MAhBf,WAA4B,IAClB/D,EAAiBqC,qBAAWhC,GAA5BL,aACR,OACE,8BACE,qCACE,yCACA,oBAAIyC,UAAU,OAAd,SACGzC,EAAagD,KAAI,SAAC9C,GAAD,OAChB,cAAC,EAAD,CAAmCA,YAAaA,GAA9BA,EAAY4D,gBCV7BE,EAAS,WACpB,OAAO,kDCmBMC,MAdf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,sBAAKxB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCJOyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7dd5c63a.chunk.js","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n\n    default:\n      return state;\n  }\n};\n","import { useState, useReducer, createContext } from \"react\";\nimport reducer from \"./AppReducer\";\nimport { useTransactions } from \"../hooks/useTransactions\";\nimport axios from \"axios\";\n///create context\nexport const GlobalContext = createContext();\n\nexport const GlobalProvider = ({ children }) => {\n  const { transactions } = useTransactions();\n  const [state, dispatch] = useReducer(reducer, {\n    transactions,\n  });\n  // Actions\n  const deleteTransaction = async (id) => {\n    try {\n      await axios.delete(\n        `https://expense-tracker-back.herokuapp.com/transaction/${id}`\n      );\n      dispatch({\n        type: \"DELETE_TRANSACTION\",\n        payload: id,\n      });\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const addTransaction = async (transaction) => {\n    try {\n      await axios.post(\n        `https://expense-tracker-back.herokuapp.com/transactions`,\n        transaction\n      );\n      dispatch({\n        type: \"ADD_TRANSACTION\",\n        payload: transaction,\n      });\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: transactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nexport const useTransactions = () => {\n  const [transactions, setTransactions] = useState([]);\n  const fetchData = async () => {\n    try {\n      const transactionsdata = await axios.get(\n        `https://expense-tracker-back.herokuapp.com/transactions`\n      );\n      if (transactions.length !== transactionsdata?.data?.transactions) {\n        setTransactions(transactionsdata?.data?.transactions);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [transactions]);\n  return {\n    transactions,\n  };\n};\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction AddTransaction() {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      text,\n      amount: +amount,\n    };\n\n    addTransaction(newTransaction);\n    setAmount(\"\");\n    setText(\"\");\n  };\n  return (\n    <div>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransaction;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction Balance() {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <div>\n      <h4>Your Balance</h4>\n      <h1>${total}</h1>\n    </div>\n  );\n}\n\nexport default Balance;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction IncomeExpenses() {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n  return (\n    <div>\n      <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p className=\"money plus\">{income}</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p className=\"money minus\">{expense}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default IncomeExpenses;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n\n  return (\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n      {transaction.text}{\" \"}\n      <span>\n        {sign}${Math.abs(transaction.amount)}\n      </span>\n      <button\n        onClick={() => deleteTransaction(transaction._id)}\n        className=\"delete-btn\"\n      >\n        x\n      </button>\n    </li>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Transaction } from \"./Transaction\";\n\nfunction TransactionList() {\n  const { transactions } = useContext(GlobalContext);\n  return (\n    <div>\n      <>\n        <h3>History</h3>\n        <ul className=\"list\">\n          {transactions.map((transaction) => (\n            <Transaction key={transaction._id} transaction={transaction} />\n          ))}\n        </ul>\n      </>\n    </div>\n  );\n}\n\nexport default TransactionList;\n","import React from \"react\";\n\nexport const Header = () => {\n  return <h2>Expense Tracker</h2>;\n};\n","import \"./App.css\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport Balance from \"./components/Balance\";\nimport IncomeExpenses from \"./components/IncomeExpenses\";\nimport TransactionList from \"./components/TransactionList\";\nimport { Header } from \"./Header\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}