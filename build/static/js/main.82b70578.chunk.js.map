{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/AddTransaction.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","reducer","dispatch","Provider","value","deleteTransaction","addTransaction","AddTransaction","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","newTransaction","Math","floor","random","className","htmlFor","onChange","target","placeholder","Balance","amounts","map","console","log","total","reduce","acc","item","toFixed","IncomeExpenses","income","expense","Transaction","sign","abs","onClick","TransactionList","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82b70578.chunk.js","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n","import { useState, useReducer, createContext } from \"react\";\nimport reducer from \"./AppReducer\";\n\nconst initialState = { transactions: [] };\n\n///create context\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id,\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: transaction,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction AddTransaction() {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: +amount,\n    };\n\n    addTransaction(newTransaction);\n  };\n  return (\n    <div>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransaction;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction Balance() {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n  console.log(amounts);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <div>\n      <h4>Your Balance</h4>\n      <h1>${total}</h1>\n    </div>\n  );\n}\n\nexport default Balance;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction IncomeExpenses() {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n  return (\n    <div>\n      <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p className=\"money plus\">{income}</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p className=\"money minus\">{expense}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default IncomeExpenses;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n\n  return (\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n      {transaction.text}{\" \"}\n      <span>\n        {sign}${Math.abs(transaction.amount)}\n      </span>\n      <button\n        onClick={() => deleteTransaction(transaction.id)}\n        className=\"delete-btn\"\n      >\n        x\n      </button>\n    </li>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Transaction } from \"./Transaction\";\n\nfunction TransactionList() {\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <div>\n      <>\n        <h3>History</h3>\n        <ul className=\"list\">\n          {transactions.map((transaction) => (\n            <Transaction key={transaction.id} transaction={transaction} />\n          ))}\n        </ul>\n      </>\n    </div>\n  );\n}\n\nexport default TransactionList;\n","import React from \"react\";\n\nexport const Header = () => {\n  return <h2>Expense Tracker</h2>;\n};\n","import \"./App.css\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport Balance from \"./components/Balance\";\nimport IncomeExpenses from \"./components/IncomeExpenses\";\nimport TransactionList from \"./components/TransactionList\";\nimport { Header } from \"./Header\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}